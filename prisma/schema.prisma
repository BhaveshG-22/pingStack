generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id             String          @id @default(cuid())
  email          String?         @unique
  name           String?
  EmailSchedules EmailSchedule[]
  leads          Lead[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  image          String?
  accounts       Account[]
  sessions       Session[]
  emailVerified  DateTime?
}

model EmailSchedule {
  id        String @id @default(cuid())
  dayOfWeek Days
  time      String
  user      User   @relation(fields: [userId], references: [id])
  userId    String
}

model Lead {
  id        String   @id @default(cuid())
  name      String
  email     String
  company   String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
}

enum Days {
  Mon @map("Monday")
  Tue @map("Tuesday")
  Wed @map("Wednesday")
  Thu @map("Thursday")
  Fri @map("Friday")
  Sat @map("Saturday")
  Sun @map("Sunday")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}
